## DO NOT EDIT!
# This file was provisioned by OpenTofu
# File origin: https://github.com/aetheric-oss/tofu-github/tree/main/src/modules/vars/templates/rust/all/.github/workflows/rust_ci.yml

---

on:
  push:
    branches:
      - develop
      - main
    paths:
      - "**/*.rs"
      - "Cargo.lock"
      - "**/Cargo.toml"
  pull_request:
    branches:
      - develop
      - main
    paths:
      - "**/*.rs"
      - "Cargo.lock"
      - "**/Cargo.toml"

name: Rust Checks

env:
  TERM: xterm

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: make rust-fmt

  check:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci"
          cache-directories: "${{ github.workspace }}/.cargo"
      - run: make rust-check

  cargo-deny-list:
    name: cargo-deny (list)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v3
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        manifest-path: ./Cargo.toml
        command: list -f human

  # TODO(R5): Uncomment this block
  # cargo-deny-check:
  #   runs-on: ubuntu-latest
  #   name: cargo-deny (check)
  #   strategy:
  #     matrix:
  #       checks:
  #         - advisories
  #         - bans licenses sources
  #   continue-on-error: true
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: EmbarkStudios/cargo-deny-action@v1
  #     with:
  #       log-level: warn
  #       manifest-path: ./Cargo.toml
  #       command: check -s ${{ matrix.checks }}

  build:
    name: Build
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci"
          cache-directories: "${{ github.workspace }}/.cargo"
      - run: make rust-build
      - name: Cache .env file for next jobs
        uses: actions/cache/save@v4
        id: cache
        with:
          path: .env
          key: dot-env-${{ github.run_id }}

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci"
          cache-directories: "${{ github.workspace }}/.cargo"
      - name: Get .env file from cache
        uses: actions/cache/restore@v4
        with:
          path: .env
          key: dot-env-${{ github.run_id }}
      - name: Test
        run: make rust-test

  clippy:
    name: Clippy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci"
          cache-directories: "${{ github.workspace }}/.cargo"
      - run: make rust-clippy

  # Validates the code examples in doc comments
  doc:
    name: Rustdoc
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci"
          cache-directories: "${{ github.workspace }}/.cargo"
      - run: make rust-doc

  coverage:
    name: Unit Test Coverage
    needs: build
    runs-on: ubuntu-latest
    env:
      NODE_COVERALLS_DEBUG: 1
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-ci"
          cache-directories: "${{ github.workspace }}/.cargo"
      - name: Get .env file from cache
        uses: actions/cache/restore@v4
        with:
          path: .env
          key: dot-env-${{ github.run_id }}
      - run: |
          mkdir -p coverage
          make rust-ut-coverage | tee coverage/ut.txt
          echo UT_COV=$(sed '/||/,$!d' coverage/ut.txt) >> $GITHUB_ENV
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage/lcov.info
          base-path: .
      - uses: thollander/actions-comment-pull-request@v2
        continue-on-error: true
        with:
          message: |
            :beetle: Unit Testing Coverage :mag_right:

            ${{ env.UT_COV }}

            :point_right: [View in Coveralls.io](https://coveralls.io/github/${{ github.repository }}) :point_left:
          comment_tag: unit-test-coverage
